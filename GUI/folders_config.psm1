<# Config Window for folders
   --------------------------------
   Author: Severin Nauer           
#>
function GenerateConfig {
    ########################################################################
    # Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
    # Generated On: 19.04.2020 20:32
    # Generated By: severin.nauer
    ########################################################################
    
    #region Import the Assemblies
    [reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
    [reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
    Import-Module ".\GUI\monitored_folder.psm1"
    Import-Module ".\GUI\global_config.psm1"
    Import-Module ".\GUI\folder_config.psm1"
    #endregion
    
    #region Generated Form Objects
    $form1 = New-Object System.Windows.Forms.Form
    $editButton = New-Object System.Windows.Forms.Button
    $addButton = New-Object System.Windows.Forms.Button
    $buttonGlobal = New-Object System.Windows.Forms.Button
    $label1 = New-Object System.Windows.Forms.Label
    $folderGrid = New-Object System.Windows.Forms.DataGridView
    $InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
    #endregion Generated Form Objects

    #fills the Grid with the data of the config
    $fillGrid = { 
        $folderGrid.Rows.Clear()
        $jsonConfig = (ImportConfig $configPath)
        foreach ($folder in $jsonConfig.folders) {
            $folderGrid.Rows.Add($folder.name, $folder.path)
        } 
    }
    
    #----------------------------------------------
    #Generated Event Script Blocks
    #----------------------------------------------
    #Provide Custom Code for events specified in PrimalForms.

    $handler_editButton_Click = 
    {
        if ($folderGrid.SelectedRows.Count -gt 0) {
            $item = $folderGrid.SelectedRows[0]
            GenerateFolderConfig -index $item.Index
        }
    }
    
    $handler_form1_Load = 
    {
        . $fillGrid
    }
    

    $handler_addButton_Click = 
    {
        #Opens the montiored folder view with tag 'new'
        GenerateMonitoredFolder -new $true
        . $fillGrid
    }
    
    $open_Global_Config = 
    {
        #Opens the globalConfig dialog
        GenerateGlobalConfig
        . $fillGrid
    }
    
    $OnLoadForm_StateCorrection =
    { #Correct the initial state of the form to prevent the .Net maximized form issue
        $form1.WindowState = $InitialFormWindowState
    }
    
    #----------------------------------------------
    #region Generated Form Code
    $System_Drawing_Size = New-Object System.Drawing.Size
    $System_Drawing_Size.Height = 326
    $System_Drawing_Size.Width = 528
    $form1.ClientSize = $System_Drawing_Size
    $form1.DataBindings.DefaultDataSourceUpdateMode = 0
    $form1.Name = "form1"
    $form1.Text = "Config Editor"
    $form1.add_Load($handler_form1_Load)
    
    
    $editButton.DataBindings.DefaultDataSourceUpdateMode = 0
    $editButton.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 9.75, 0, 3, 1)
    
    $System_Drawing_Point = New-Object System.Drawing.Point
    $System_Drawing_Point.X = 12
    $System_Drawing_Point.Y = 285
    $editButton.Location = $System_Drawing_Point
    $editButton.Name = "editButton"
    $System_Drawing_Size = New-Object System.Drawing.Size
    $System_Drawing_Size.Height = 23
    $System_Drawing_Size.Width = 75
    $editButton.Size = $System_Drawing_Size
    $editButton.TabIndex = 4
    $editButton.Text = "Edit"
    $editButton.UseVisualStyleBackColor = $True
    $editButton.add_Click($handler_editButton_Click)
    
    $form1.Controls.Add($editButton)
    
    
    $addButton.DataBindings.DefaultDataSourceUpdateMode = 0
    $addButton.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 9.75, 0, 3, 1)
    
    $System_Drawing_Point = New-Object System.Drawing.Point
    $System_Drawing_Point.X = 421
    $System_Drawing_Point.Y = 285
    $addButton.Location = $System_Drawing_Point
    $addButton.Name = "addButton"
    $System_Drawing_Size = New-Object System.Drawing.Size
    $System_Drawing_Size.Height = 23
    $System_Drawing_Size.Width = 94
    $addButton.Size = $System_Drawing_Size
    $addButton.TabIndex = 3
    $addButton.Text = "Add folder"
    $addButton.UseVisualStyleBackColor = $True
    $addButton.add_Click($handler_addButton_Click)
    
    $form1.Controls.Add($addButton)
    
    
    $buttonGlobal.DataBindings.DefaultDataSourceUpdateMode = 0
    $buttonGlobal.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 9.75, 0, 3, 1)
    
    $System_Drawing_Point = New-Object System.Drawing.Point
    $System_Drawing_Point.X = 421
    $System_Drawing_Point.Y = 12
    $buttonGlobal.Location = $System_Drawing_Point
    $buttonGlobal.Name = "button1"
    $System_Drawing_Size = New-Object System.Drawing.Size
    $System_Drawing_Size.Height = 23
    $System_Drawing_Size.Width = 95
    $buttonGlobal.Size = $System_Drawing_Size
    $buttonGlobal.TabIndex = 2
    $buttonGlobal.Text = "Global rules"
    $buttonGlobal.UseVisualStyleBackColor = $True
    $buttonGlobal.add_Click($open_Global_Config)
    
    $form1.Controls.Add($buttonGlobal)
    
    $label1.DataBindings.DefaultDataSourceUpdateMode = 0
    $label1.Font = New-Object System.Drawing.Font("Microsoft Sans Serif", 12, 0, 3, 1)
    
    $System_Drawing_Point = New-Object System.Drawing.Point
    $System_Drawing_Point.X = 13
    $System_Drawing_Point.Y = 13
    $label1.Location = $System_Drawing_Point
    $label1.Name = "label1"
    $System_Drawing_Size = New-Object System.Drawing.Size
    $System_Drawing_Size.Height = 23
    $System_Drawing_Size.Width = 142
    $label1.Size = $System_Drawing_Size
    $label1.TabIndex = 1
    $label1.Text = "Monitored folders"
    
    $form1.Controls.Add($label1)
    
    $folderGrid.AllowUserToAddRows = $False
    $folderGrid.AllowUserToOrderColumns = $True
    $folderGrid.AllowUserToResizeRows = $False
    $folderGrid.ReadOnly = $true
    $System_Windows_Forms_DataGridViewTextBoxColumn_1 = New-Object System.Windows.Forms.DataGridViewTextBoxColumn
    $System_Windows_Forms_DataGridViewTextBoxColumn_1.HeaderText = "Name"
    $System_Windows_Forms_DataGridViewTextBoxColumn_1.Name = ""
    $System_Windows_Forms_DataGridViewTextBoxColumn_1.Width = 160
    
    $folderGrid.Columns.Add($System_Windows_Forms_DataGridViewTextBoxColumn_1) | Out-Null
    $System_Windows_Forms_DataGridViewTextBoxColumn_2 = New-Object System.Windows.Forms.DataGridViewTextBoxColumn
    $System_Windows_Forms_DataGridViewTextBoxColumn_2.HeaderText = "Path"
    $System_Windows_Forms_DataGridViewTextBoxColumn_2.Name = ""
    $System_Windows_Forms_DataGridViewTextBoxColumn_2.Width = 300
    
    $folderGrid.Columns.Add($System_Windows_Forms_DataGridViewTextBoxColumn_2) | Out-Null
    $folderGrid.DataBindings.DefaultDataSourceUpdateMode = 0
    $System_Drawing_Point = New-Object System.Drawing.Point
    $System_Drawing_Point.X = 12
    $System_Drawing_Point.Y = 59
    $folderGrid.Location = $System_Drawing_Point
    $folderGrid.Name = "folderGrid"
    $System_Drawing_Size = New-Object System.Drawing.Size
    $System_Drawing_Size.Height = 210
    $System_Drawing_Size.Width = 504
    $folderGrid.Size = $System_Drawing_Size
    $folderGrid.TabIndex = 0

    #DoubleClick function on GridItem
    $folderGrid.add_CellMouseDoubleClick{
        $folderGrid.SelectedRows | ForEach-Object {
            $name = $_.Cells[0].Value
            $path = $_.Cells[1].Value
            #Generates The MonitoredFolderView for the selected Item
            GenerateMonitoredFolder -name $name -path $path -new $false -index $_.Index
        }
        . $fillGrid
    }
    
    $form1.Controls.Add($folderGrid)
    
    #endregion Generated Form Code
    
    #Save the initial state of the form
    $InitialFormWindowState = $form1.WindowState
    #Init the OnLoad event to correct the initial state of the form
    $form1.add_Load($OnLoadForm_StateCorrection)
    #Disable Resize
    $form1.FormBorderStyle = 3
    $form1.MaximizeBox = $false
    #Show the Form
    $form1.ShowDialog() | Out-Null
    
} #End Function

Export-ModuleMember -Function GenerateConfig